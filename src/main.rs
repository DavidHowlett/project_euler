mod fizz_buzz;

fn p1()->i32{
    // If we list all the natural numbers below 10 that are multiples of 3 or 5,
    // we get 3, 5, 6 and 9. The sum of these multiples is 23.
    // Find the sum of all the multiples of 3 or 5 below 1000.
    let mut total = 0;
    for i in 0..1000 {
        if i % 3 == 0 || i%5==0{
            total += i;
        }
    }
    total
}
fn p2()->i32{
    // Each new term in the Fibonacci sequence is generated by adding the previous two terms.
    // By starting with 1 and 2, the first 10 terms will be:
    // 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    // By considering the terms in the Fibonacci sequence whose values do not exceed four million,
    // find the sum of the even-valued terms.
    let mut a = 1;
    let mut b = 0;
    let mut tmp;
    let mut total = 0;
    while a < 4000000 {
        if a%2==1 {
            total += a
        }
        tmp = a;
        a = a+b;
        b = tmp;
    }
    total
}
fn p3()->u64{
    // The prime factors of 13195 are 5, 7, 13 and 29.
    // What is the largest prime factor of the number 600851475143 ?
    let mut x = 600851475143u64;
    for i in 1..10000000{
        if x < i*i{
            return x
        }
        if x%i==0{
            x /= i;
        }
    }
    return x
}
fn main(){
    fizz_buzz::fizz_buzz();
    print!("{}\n", p1());
    print!("{}\n", p2());
    print!("{}\n", p3());
}